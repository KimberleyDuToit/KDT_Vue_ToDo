<!DOCTYPE html>
<html>

<head>
    <title>To Do App</title>
    <meta charset="utf-8">
    <meta http-equiv='X-UA-Compatible' content='IE=edge'>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="styles/styles.css">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Qwigley&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300&display=swap" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="styles/animations.css">
</head>

<body>
    <div class="fullpage" id="vueArea">
        <a name="top"></a>
        <!--Sticky nav-->
        <nav class="navbar navbar-expand navbar-dark sticky-top px-5 lhn">
            <a class="navbar-brand" href="#">
                <h1>To Do List</h1>
            </a>
        </nav>

        <!--Heading-->
        <header>
            <div class="addPanel container-fluid px-5 py-2">
                <h2>Add a task to your list:</h2>
                <!--Add a task button-->
                <div id="addNew">
                    <input id="writeTaskName" type="text" placeholder="Task Name" v-model="liNew.taskName">
                    <input id="category" type='text' placeholder="Task Category" v-model="liNew.taskCat">
                    <input id="date" type='date' placeholder="Due Date" v-model="liNew.taskDate">
                    <input id="priority" type='number' placeholder="Priority #" v-model="liNew.taskPrio">
                    <button @click="pushTask" id="add" type="button" class="btn btn-primary">
                        Create new task
                    </button>
                </div>
            </div>
        </header>

        <!--Main Area-->
        <div class="mainArea container-fluid content col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 p-5 mx-auto">
            <div id="tHeaders">
                <h2 id="tasks">Tasks</h2>
                <button id="sort" type="button" class="btn btn-primary">Sort A-Z</button>
                <button id="sortCategory" type="button" class="btn btn-primary">Sort by Category</button>
                <button id="sortDate" type="button" class="btn btn-primary">Sort By Date: Soonest</button>
                <button id="sortPrio" type="button" class="btn btn-primary">Sort By Priority: Highest</button>
            </div>
            <hr>
            <!--Section Content, List-->
            <section>
                <ul id="taskList">
                    <li class="liOutput" v-for='item in myArray'>
                        <input id="doneOutputID" @click="strike(item)" class="done" type="checkbox">
                        <span id="taskOutputID" class="taskOutput" :contenteditable="item.taskEditable===true"
                            :class="{editable : item.taskEditable, strike : item.taskDone}">{{item.taskName}}</span>
                        <span id="catOutputID" class="catOutput" :contenteditable="item.taskEditable===true"
                            :class="{editable : item.taskEditable, strike : item.taskDone}">{{item.taskCat}}</span>
                        <span id="dateOutputID" class="dateOutput" :contenteditable="item.taskEditable===true"
                            :class="{editable : item.taskEditable, strike : item.taskDone}">{{item.taskDate}}</span>
                        <span id="prioOutputID" class="prioOutput" :contenteditable="item.taskEditable===true"
                            :class="{editable : item.taskEditable, strike : item.taskDone}">{{item.taskPrio}}</span>
                        <button @click="editItem(item)" class="edit">&#128393</button>
                        <button class="remove">&#10005</button>
                    </li>
                </ul>
            </section>

            <!--Footer with back to top-->
            <footer>
                <hr>
                <a id="backtotop" href="#top">Back to the top of page</a>
            </footer>

        </div>

    </div>


    <!--Vue, Javascript, Popper, Jquery bundle-->
    <script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4"
        crossorigin="anonymous"></script>
    <!--<script src="scripts/script.js"></script>-->

    <script>
        new Vue({
            el: '#vueArea',
            data: {
                liNew: {
                    taskName: '',
                    taskCat: '',
                    taskDate: '',
                    taskPrio: '',
                    taskDone: false,
                    taskEditable: false,
                    taskDelete: false,
                },

                myArray: []
            },

            methods: {
                pushTask() {
                    this.myArray.push(Object.assign({}, this.liNew));
                    const taskArrStorage = JSON.stringify(this.myArray);
                    localStorage.setItem("taskArrStorage", taskArrStorage);
                    console.log('Array Stored in Local')
                },

                editItem(item) {
                    item.taskEditable = !item.taskEditable;
                    console.log(item);
                    const listObj = item;
                    item.taskName = document.getElementById('taskOutputID').innerHTML;
                    item.taskCat = document.getElementById('catOutputID').innerHTML;
                    item.taskDate = document.getElementById('dateOutputID').innerHTML;
                    item.taskPrio = document.getElementById('prioOutputID').innerHTML;
                    const taskArrStorage = JSON.stringify(this.myArray);
                    localStorage.setItem("taskArrStorage", taskArrStorage);
                    console.log('Array Stored in Local')
                },

                strike (item) {
                    item.taskDone = !item.taskDone;
                    const taskArrStorage = JSON.stringify(this.myArray);
                    localStorage.setItem("taskArrStorage", taskArrStorage);
                    console.log('Array Stored in Local')
                }
            },

            mounted: function (item) {
                let taskSaved = localStorage.getItem("taskArrStorage");
                let taskLoad = JSON.parse(taskSaved);
                if (taskLoad === null) {
                    console.log('No objects in array')
                } else {
                    this.myArray.push(...taskLoad);
                }
                let doneButton = document.getElementById("doneOutputID");
                    if (item.taskDone === true){doneButton.checked = true} else {doneButton.checked= false};

                /*myArray.forEach(ele => {
                    let taskName = this.taskName;
                    let dueDate = this.dueDate;
                    let taskCat = this.taskCat;
                    let taskPrio = this.taskPrio;
                    let taskDone = this.taskDone;
                    let taskEditable = this.taskEditable;
                    let taskDelete = this.taskDelete;
                    let taskCreated = ele;
                })*/
            }
        })
    </script>

</body>

</html>